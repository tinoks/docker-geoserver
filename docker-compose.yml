version: '2'

volumes:
   db-backups:
   geoserver-data:

services:
   db:
      image: kartoza/postgis:10.0-2.4
      hostname: postgis
      volumes:
         #- ./pg/postgres_data:/var/lib/postgresql
         - db-backups:/backups
      ports:
        - "25432:5432"
      environment:
         - USERNAME=docker
         - PASS=docker
         - ALLOW_IP_RANGE=172.20.0.0/24
      restart: unless-stopped

   geoserver:
      image: kartoza/geoserver:2.12.0
      hostname: geoserver 
      volumes:
        - geoserver-data:/opt/geoserver/data_dir
      ports:
        - "8080:8080"
      links:
         - db:db
      restart: unless-stopped
      user: root

   dbbackups:
      image: kartoza/pg-backup:10.0
      hostname: pg-backups
      volumes:
        - db-backups:/backups
      links:
         - db:db
      environment:
         # take care to let the project name below match that
         # declared in the top of the makefile
         - DUMPPREFIX=PG_geoserver
         # These are all defaults anyway, but setting explicitly in
         # case we ever want to ever use different credentials
         - PGUSER=docker
         - PGPASSWORD=docker
         - PGPORT=5432
         - PGHOST=db
         - PGDATABASE=gis
      restart: unless-stopped

   btsync-data:
      # BTSync backups for database dumps
      image: kartoza/btsync
      hostname: btsync-data
      volumes:
         # We mount RW so that we can use remove peer to clean up old backups off the server
         - db-backups:/web:rw
      env_file:
         # The environment file should define two variables:
         # SECRET: a RW btsync key if the server is a production server
         #     a RO btsync key if it is staging or development machine
         # DEVICE: a unique device name so you can recognise which host is being peered with in btsync
         # See the btsync example env in this folder for a template
         # NOTE:
         # Do not version control the env file as anyone else could peer it and sync
         # our database backups etc.
         - btsync-db.env
      
   btsync-media:                                                                   
      # BTSync backups for django media
      image: kartoza/btsync
      hostname: btsync-media
      volumes:
         # We mount RW so that we can use peers 
         # to push shapefiles etc. to the server
         - geoserver-data:/web:rw
      env_file:
         # The environment file should define two variables:
         # SECRET: a RW btsync key if the server is a production server
         #     a RO btsync key if it is staging or development machine
         # DEVICE: a unique device name so you can recognise which host is being peered with in btsync
         # See the btsync example env in this folder for a template
         # NOTE:
         # Do not version control the env file as anyone else could peer it and sync
         # our media backups etc.
         - btsync-media.env

